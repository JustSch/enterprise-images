name: build

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main
env:
  ENDPOINT: "justsch/coder-vnc"
  BRANCH: "main"
  # schedule:
  #   # Re-build all images at 2am UTC every Monday (8pm CST/9pm CDT)
  #   #
  #   # This ensures we always start with a recent base image, which
  #   # reduces wasted space due to written-over files in the writable
  #   # layer, ensures packages are up-to-date (since many of these
  #   # images install the latest versions of packages available at
  #   # build time), and allow us to ensure that images continue to
  #   # be buildable from source (no removed packages).
  #   #
  #   # See: https://crontab.guru/#0_2_*_*_1
  #   - cron: "0 2 * * 1"

  workflow_dispatch:

permissions:
  actions: read
  checks: none
  contents: read
  id-token: write
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: write
  statuses: none

jobs:

  images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    name: images/ubuntu
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build image
        run: |
          cd ${{ github.workspace }}/deprecated/vnc
          docker build --no-cache -t ${{ github.sha }} -f Dockerfile.ubuntu  .

      - name: Tag image
        if: ${{ github.ref == format('refs/heads/{0}', env.BRANCH) && env.ENDPOINT != 'user/endpoint' }}
        run: |
          docker tag ${{ github.sha }} ghcr.io/${ENDPOINT}
          docker tag ${{ github.sha }} ghcr.io/${ENDPOINT}:${{ github.sha }}

      - name: Credential check
        if: ${{ github.ref == format('refs/heads/{0}', env.BRANCH) && env.ENDPOINT != 'user/endpoint' }}
        run: |
            echo "CR_USER=${{ secrets.CR_USER }}" >> $GITHUB_ENV
            echo "CR_PAT=${{ secrets.CR_PAT }}" >> $GITHUB_ENV
            if [[ "${{ secrets.CR_USER }}" == "" && "${{ secrets.CR_PAT }}" == ""  ]]; then
              echo "::error::Push credential secrets missing."
              echo "::error::You must set either CR_USER & CR_PAT"
              exit 1
            fi
            
      - name: Login to GitHub Container Registry
        if: ${{ github.ref == format('refs/heads/{0}', env.BRANCH) && env.CR_USER && env.CR_PAT && env.ENDPOINT != 'user/endpoint' }}
        run: |
            echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ secrets.CR_USER }} --password-stdin
  
      - name: Push tags to GitHub Container Registry
        if: ${{ github.ref == format('refs/heads/{0}', env.BRANCH) && env.CR_USER && env.CR_PAT && env.ENDPOINT != 'user/endpoint' }}
        run: |
            docker push ghcr.io/${ENDPOINT}
            docker push ghcr.io/${ENDPOINT}:${{ github.sha }}

